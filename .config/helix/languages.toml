# introduce new language server
[language-server.scls]
command = "simple-completion-language-server"

[language-server.scls.config]
max_completion_items = 100           # set max completion results len for each group: words, snippets, unicode-input
feature_words = true                 # enable completion by word
feature_snippets = true              # enable snippets
snippets_first = true                # completions will return before snippets by default
snippets_inline_by_word_tail = false # suggest snippets by WORD tail, for example text `xsq|` become `x^2|` when snippet `sq` has body `^2`
feature_unicode_input = false        # enable "unicode input"
feature_paths = false                # enable path completion
feature_citations = false            # enable citation completion (only on `citation` feature enabled)


# write logs to /tmp/completion.log
[language-server.scls.environment]
RUST_LOG = "info,simple-completion-language-server=info"
LOG_FILE = "/tmp/completion.log"

[language-server]
emmet-ls = { command = "emmet-ls", args = ["--stdio"] }

[language-server.astro-ls]
command = "astro-ls"
args = ["--stdio"]

[language-server.emmet-lsp]
command = "emmet-language-server"
args = ["--stdio"]

[language-server.eslint]
command = "vscode-eslint-language-server"
args = ["--stdio"]

[language-server.eslint.config]
codeActionsOnSave = { mode = "all", "source.fixAll.eslint" = true }
format = { enable = true }
nodePath = ""
quiet = false
rulesCustomizations = []
run = "onType"
validate = "on"
experimental = {}
problems = { shortenToSingleLine = false }

[language-server.eslint.config.codeAction]
disableRuleComment = { enable = true, location = "separateLine" }
showDocumentation = { enable = false }

[language-server.vscode-json-language-server.config]
json = { validate = { enable = true }, format = { enable = true } }
provideFormatter = true

[language-server.vscode-css-language-server.config]
css = { validate = { enable = true } }
scss = { validate = { enable = true } }
less = { validate = { enable = true } }
provideFormatter = true

[[language]]
name = "typescript"
language-servers = ["typescript-language-server", "eslint", "emmet-ls"]
formatter = { command = "prettier", args = ["--parser", "typescript"] }
indent = { tab-width = 4, unit = "\t\t" }
auto-format = true

[[language]]
name = "tsx"
language-servers = [
  "typescript-language-server",
  "eslint",
  "emmet-ls",
  "tailwindcss-ls",
  "scls",
]
formatter = { command = "prettier", args = ["--parser", "typescript"] }
auto-format = true
indent = { tab-width = 4, unit = "\t\t" }

[[language]]
name = "javascript"
language-servers = ["typescript-language-server", "eslint", "emmet-ls"]
# formatter = { command = "dprint", args = [ "fmt", "--stdin", "javascript" ] }
formatter = { command = "prettier", args = ["--parser", "typescript"] }
indent = { tab-width = 4, unit = "\t\t" }
auto-format = true

[[language]]
name = "jsx"
language-servers = [
  "typescript-language-server",
  "eslint",
  "emmet-ls",
  "tailwindcss-ls",
  "scls",
]
# formatter = { command = "dprint", args = [ "fmt", "--stdin", "jsx" ] }
formatter = { command = "prettier", args = ["--parser", "typescript"] }
indent = { tab-width = 4, unit = "\t\t" }
auto-format = true

[[language]]
name = "json"
formatter = { command = "prettier", args = ["--parser", "json"] }
indent = { tab-width = 2, unit = "\t\t" }
auto-format = true

[[language]]
name = "html"
language-servers = [
  "vscode-html-language-server",
  "emmet-lsp",
  "tailwindcss-ls",
]
formatter = { command = 'prettier', args = ["--parser", "html"] }
# formatter = {  command = "dprint", args = [ "fmt", "--stdin", "html" ] }
indent = { tab-width = 4, unit = "    " }
auto-format = true

[[language]]
name = "css"
language-servers = ["vscode-css-language-server", "emmet-ls", "tailwindcss-ls"]
indent = { tab-width = 4, unit = "    " }
formatter = { command = 'prettier', args = ["--parser", "css"] }
# formatter = {  command = "dprint", args = [ "fmt", "--stdin", "css" ]  }
auto-format = true

[[language]]
name = "astro"
language-servers = ["eslint", "emmet-ls", "astro-ls"]
indent = { tab-width = 4, unit = "\t\t" }
formatter = { command = "dprint", args = ["fmt", "--stdin", "astro"] }
auto-format = true

[[language]]
name = "go"
auto-format = true
formatter = { command = "goimports" }

[[language]]
name = "toml"
formatter = { command = "taplo", args = ["fmt", "-"] }
auto-format = true

[[language]]
name = "stub"
scope = "text.stub"
file-types = []
shebangs = []
roots = []
auto-format = false
language-servers = ["scls"]
